/* tslint:disable */
/* eslint-disable */
/**
 * sdapiv1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Options
 * @export
 * @interface Options
 */
export interface Options {
    /**
     * Samples Save，Always save all generated images
     * @type {boolean}
     * @memberof Options
     */
    samplesSave?: boolean;
    /**
     * Samples Format，File format for images
     * @type {string}
     * @memberof Options
     */
    samplesFormat?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    samplesFilenamePattern?: string;
    /**
     * Save Images Add Number，Add number to filename when saving
     * @type {boolean}
     * @memberof Options
     */
    saveImagesAddNumber?: boolean;
    /**
     * Save Images Replace Action，Saving the image to an existing file
     * @type {string}
     * @memberof Options
     */
    saveImagesReplaceAction?: string;
    /**
     * Grid Save，Always save all generated image grids
     * @type {boolean}
     * @memberof Options
     */
    gridSave?: boolean;
    /**
     * Grid Format，File format for grids
     * @type {string}
     * @memberof Options
     */
    gridFormat?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    gridExtendedFilename?: string;
    /**
     * Grid Only If Multiple，Do not save grids consisting of one picture
     * @type {boolean}
     * @memberof Options
     */
    gridOnlyIfMultiple?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    gridPreventEmptySpots?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    gridZipFilenamePattern?: string;
    /**
     * N Rows，Grid row count; use -1 for autodetect and 0 for it to be same as batch size
     * @type {number}
     * @memberof Options
     */
    nRows?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    font?: string;
    /**
     * Grid Text Active Color，Text color for image grids
     * @type {string}
     * @memberof Options
     */
    gridTextActiveColor?: string;
    /**
     * Grid Text Inactive Color，Inactive text color for image grids
     * @type {string}
     * @memberof Options
     */
    gridTextInactiveColor?: string;
    /**
     * Grid Background Color，Background color for image grids
     * @type {string}
     * @memberof Options
     */
    gridBackgroundColor?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    saveImagesBeforeFaceRestoration?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    saveImagesBeforeHighresFix?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    saveImagesBeforeColorCorrection?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    saveMask?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    saveMaskComposite?: string;
    /**
     * Jpeg Quality，Quality for saved jpeg and avif images
     * @type {number}
     * @memberof Options
     */
    jpegQuality?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    webpLossless?: string;
    /**
     * Export For 4Chan，Save copy of large images as JPG
     * @type {boolean}
     * @memberof Options
     */
    exportFor4chan?: boolean;
    /**
     * Img Downscale Threshold，File size limit for the above option, MB
     * @type {number}
     * @memberof Options
     */
    imgDownscaleThreshold?: number;
    /**
     * Target Side Length，Width/height limit for the above option, in pixels
     * @type {number}
     * @memberof Options
     */
    targetSideLength?: number;
    /**
     * Img Max Size Mp，Maximum image size
     * @type {number}
     * @memberof Options
     */
    imgMaxSizeMp?: number;
    /**
     * Use Original Name Batch，Use original name for output filename during batch process in extras tab
     * @type {boolean}
     * @memberof Options
     */
    useOriginalNameBatch?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    useUpscalerNameAsSuffix?: string;
    /**
     * Save Selected Only，When using 'Save' button, only save a single selected image
     * @type {boolean}
     * @memberof Options
     */
    saveSelectedOnly?: boolean;
    /**
     * Save Write Log Csv，Write log.csv when saving images using 'Save' button
     * @type {boolean}
     * @memberof Options
     */
    saveWriteLogCsv?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    saveInitImg?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    tempDir?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    cleanTempDirAtStart?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    saveIncompleteImages?: string;
    /**
     * Notification Audio，Play notification sound after image generation
     * @type {boolean}
     * @memberof Options
     */
    notificationAudio?: boolean;
    /**
     * Notification Volume，Notification sound volume
     * @type {number}
     * @memberof Options
     */
    notificationVolume?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    outdirSamples?: string;
    /**
     * Outdir Txt2Img Samples，Output directory for txt2img images
     * @type {string}
     * @memberof Options
     */
    outdirTxt2imgSamples?: string;
    /**
     * Outdir Img2Img Samples，Output directory for img2img images
     * @type {string}
     * @memberof Options
     */
    outdirImg2imgSamples?: string;
    /**
     * Outdir Extras Samples，Output directory for images from extras tab
     * @type {string}
     * @memberof Options
     */
    outdirExtrasSamples?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    outdirGrids?: string;
    /**
     * Outdir Txt2Img Grids，Output directory for txt2img grids
     * @type {string}
     * @memberof Options
     */
    outdirTxt2imgGrids?: string;
    /**
     * Outdir Img2Img Grids，Output directory for img2img grids
     * @type {string}
     * @memberof Options
     */
    outdirImg2imgGrids?: string;
    /**
     * Outdir Save，Directory for saving images using the Save button
     * @type {string}
     * @memberof Options
     */
    outdirSave?: string;
    /**
     * Outdir Init Images，Directory for saving init images when using img2img
     * @type {string}
     * @memberof Options
     */
    outdirInitImages?: string;
    /**
     * Save To Dirs，Save images to a subdirectory
     * @type {boolean}
     * @memberof Options
     */
    saveToDirs?: boolean;
    /**
     * Grid Save To Dirs，Save grids to a subdirectory
     * @type {boolean}
     * @memberof Options
     */
    gridSaveToDirs?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    useSaveToDirsForUi?: string;
    /**
     * Directories Filename Pattern，Directory name pattern
     * @type {string}
     * @memberof Options
     */
    directoriesFilenamePattern?: string;
    /**
     * Directories Max Prompt Words，Max prompt words for [prompt_words] pattern
     * @type {number}
     * @memberof Options
     */
    directoriesMaxPromptWords?: number;
    /**
     * Esrgan Tile，Tile size for ESRGAN upscalers.
     * @type {number}
     * @memberof Options
     */
    eSRGANTile?: number;
    /**
     * Esrgan Tile Overlap，Tile overlap for ESRGAN upscalers.
     * @type {number}
     * @memberof Options
     */
    eSRGANTileOverlap?: number;
    /**
     * Realesrgan Enabled Models，Select which Real-ESRGAN models to show in the web UI.
     * @type {Array<string>}
     * @memberof Options
     */
    realesrganEnabledModels?: Array<string>;
    /**
     * Dat Enabled Models，Select which DAT models to show in the web UI.
     * @type {Array<string>}
     * @memberof Options
     */
    datEnabledModels?: Array<string>;
    /**
     * Dat Tile，Tile size for DAT upscalers.
     * @type {number}
     * @memberof Options
     */
    dATTile?: number;
    /**
     * Dat Tile Overlap，Tile overlap for DAT upscalers.
     * @type {number}
     * @memberof Options
     */
    dATTileOverlap?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    upscalerForImg2img?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    setScaleByWhenChangingUpscaler?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    faceRestoration?: string;
    /**
     * Face Restoration Model，Face restoration model
     * @type {string}
     * @memberof Options
     */
    faceRestorationModel?: string;
    /**
     * Code Former Weight，CodeFormer weight
     * @type {number}
     * @memberof Options
     */
    codeFormerWeight?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    faceRestorationUnload?: string;
    /**
     * Auto Launch Browser，Automatically open webui in browser on startup
     * @type {string}
     * @memberof Options
     */
    autoLaunchBrowser?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    enableConsolePrompts?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    showWarnings?: string;
    /**
     * Show Gradio Deprecation Warnings，Show gradio deprecation warnings in console.
     * @type {boolean}
     * @memberof Options
     */
    showGradioDeprecationWarnings?: boolean;
    /**
     * Memmon Poll Rate，VRAM usage polls per second during generation.
     * @type {number}
     * @memberof Options
     */
    memmonPollRate?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    samplesLogStdout?: string;
    /**
     * Multiple Tqdm，Add a second progress bar to the console that shows progress for an entire job.
     * @type {boolean}
     * @memberof Options
     */
    multipleTqdm?: boolean;
    /**
     * Enable Upscale Progressbar，Show a progress bar in the console for tiled upscaling.
     * @type {boolean}
     * @memberof Options
     */
    enableUpscaleProgressbar?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    printHypernetExtra?: string;
    /**
     * List Hidden Files，Load models/files in hidden directories
     * @type {boolean}
     * @memberof Options
     */
    listHiddenFiles?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    disableMmapLoadSafetensors?: string;
    /**
     * Hide Ldm Prints，Prevent Stability-AI's ldm/sgm modules from printing noise to console.
     * @type {boolean}
     * @memberof Options
     */
    hideLdmPrints?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    dumpStacksOnSignal?: string;
    /**
     * Profiling Explanation
     * @type {string}
     * @memberof Options
     */
    profilingExplanation?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    profilingEnable?: string;
    /**
     * Profiling Activities，Activities
     * @type {Array<string>}
     * @memberof Options
     */
    profilingActivities?: Array<string>;
    /**
     * Profiling Record Shapes，Record shapes
     * @type {boolean}
     * @memberof Options
     */
    profilingRecordShapes?: boolean;
    /**
     * Profiling Profile Memory，Profile memory
     * @type {boolean}
     * @memberof Options
     */
    profilingProfileMemory?: boolean;
    /**
     * Profiling With Stack，Include python stack
     * @type {boolean}
     * @memberof Options
     */
    profilingWithStack?: boolean;
    /**
     * Profiling Filename，Profile filename
     * @type {string}
     * @memberof Options
     */
    profilingFilename?: string;
    /**
     * Api Enable Requests，Allow http:// and https:// URLs for input images in API
     * @type {boolean}
     * @memberof Options
     */
    apiEnableRequests?: boolean;
    /**
     * Api Forbid Local Requests，Forbid URLs to local resources
     * @type {boolean}
     * @memberof Options
     */
    apiForbidLocalRequests?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    apiUseragent?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    unloadModelsWhenTraining?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    pinMemory?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    saveOptimizerState?: string;
    /**
     * Save Training Settings To Txt，Save textual inversion and hypernet settings to a text file whenever training starts.
     * @type {boolean}
     * @memberof Options
     */
    saveTrainingSettingsToTxt?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    datasetFilenameWordRegex?: string;
    /**
     * Dataset Filename Join String，Filename join string
     * @type {string}
     * @memberof Options
     */
    datasetFilenameJoinString?: string;
    /**
     * Training Image Repeats Per Epoch，Number of repeats for a single input image per epoch; used only for displaying epoch number
     * @type {number}
     * @memberof Options
     */
    trainingImageRepeatsPerEpoch?: number;
    /**
     * Training Write Csv Every，Save an csv containing the loss to log directory every N steps, 0 to disable
     * @type {number}
     * @memberof Options
     */
    trainingWriteCsvEvery?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    trainingXattentionOptimizations?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    trainingEnableTensorboard?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    trainingTensorboardSaveImages?: string;
    /**
     * Training Tensorboard Flush Every，How often, in seconds, to flush the pending tensorboard events and summaries to disk.
     * @type {number}
     * @memberof Options
     */
    trainingTensorboardFlushEvery?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sdModelCheckpoint?: string;
    /**
     * Sd Checkpoints Limit，Maximum number of checkpoints loaded at the same time
     * @type {number}
     * @memberof Options
     */
    sdCheckpointsLimit?: number;
    /**
     * Sd Checkpoints Keep In Cpu，Only keep one model on device
     * @type {boolean}
     * @memberof Options
     */
    sdCheckpointsKeepInCpu?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sdCheckpointCache?: string;
    /**
     * Sd Unet，SD Unet
     * @type {string}
     * @memberof Options
     */
    sdUnet?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    enableQuantization?: string;
    /**
     * Emphasis，Emphasis mode
     * @type {string}
     * @memberof Options
     */
    emphasis?: string;
    /**
     * Enable Batch Seeds，Make K-diffusion samplers produce same images in a batch as when making a single image
     * @type {boolean}
     * @memberof Options
     */
    enableBatchSeeds?: boolean;
    /**
     * Comma Padding Backtrack，Prompt word wrap length limit
     * @type {number}
     * @memberof Options
     */
    commaPaddingBacktrack?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sdxlClipLSkip?: string;
    /**
     * Clip Stop At Last Layers，Clip skip
     * @type {number}
     * @memberof Options
     */
    cLIPStopAtLastLayers?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    upcastAttn?: string;
    /**
     * Randn Source，Random number generator source.
     * @type {string}
     * @memberof Options
     */
    randnSource?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    tiling?: string;
    /**
     * Hires Fix Refiner Pass，Hires fix: which pass to enable refiner for
     * @type {string}
     * @memberof Options
     */
    hiresFixRefinerPass?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sdxlCropTop?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sdxlCropLeft?: string;
    /**
     * Sdxl Refiner Low Aesthetic Score，SDXL low aesthetic score
     * @type {number}
     * @memberof Options
     */
    sdxlRefinerLowAestheticScore?: number;
    /**
     * Sdxl Refiner High Aesthetic Score，SDXL high aesthetic score
     * @type {number}
     * @memberof Options
     */
    sdxlRefinerHighAestheticScore?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sd3EnableT5?: string;
    /**
     * Sd Vae Explanation
     * @type {string}
     * @memberof Options
     */
    sdVaeExplanation?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sdVaeCheckpointCache?: string;
    /**
     * Sd Vae，SD VAE
     * @type {string}
     * @memberof Options
     */
    sdVae?: string;
    /**
     * Sd Vae Overrides Per Model Preferences，Selected VAE overrides per-model preferences
     * @type {boolean}
     * @memberof Options
     */
    sdVaeOverridesPerModelPreferences?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    autoVaePrecisionBfloat16?: string;
    /**
     * Auto Vae Precision，Automatically revert VAE to 32-bit floats
     * @type {boolean}
     * @memberof Options
     */
    autoVaePrecision?: boolean;
    /**
     * Sd Vae Encode Method，VAE type for encode
     * @type {string}
     * @memberof Options
     */
    sdVaeEncodeMethod?: string;
    /**
     * Sd Vae Decode Method，VAE type for decode
     * @type {string}
     * @memberof Options
     */
    sdVaeDecodeMethod?: string;
    /**
     * Inpainting Mask Weight，Inpainting conditioning mask strength
     * @type {number}
     * @memberof Options
     */
    inpaintingMaskWeight?: number;
    /**
     * Initial Noise Multiplier，Noise multiplier for img2img
     * @type {number}
     * @memberof Options
     */
    initialNoiseMultiplier?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    img2imgExtraNoise?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    img2imgColorCorrection?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    img2imgFixSteps?: string;
    /**
     * Img2Img Background Color，With img2img, fill transparent parts of the input image with this color.
     * @type {string}
     * @memberof Options
     */
    img2imgBackgroundColor?: string;
    /**
     * Img2Img Editor Height，Height of the image editor
     * @type {number}
     * @memberof Options
     */
    img2imgEditorHeight?: number;
    /**
     * Img2Img Sketch Default Brush Color，Sketch initial brush color
     * @type {string}
     * @memberof Options
     */
    img2imgSketchDefaultBrushColor?: string;
    /**
     * Img2Img Inpaint Mask Brush Color，Inpaint mask brush color
     * @type {string}
     * @memberof Options
     */
    img2imgInpaintMaskBrushColor?: string;
    /**
     * Img2Img Inpaint Sketch Default Brush Color，Inpaint sketch initial brush color
     * @type {string}
     * @memberof Options
     */
    img2imgInpaintSketchDefaultBrushColor?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    returnMask?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    returnMaskComposite?: string;
    /**
     * Img2Img Batch Show Results Limit，Show the first N batch img2img results in UI
     * @type {number}
     * @memberof Options
     */
    img2imgBatchShowResultsLimit?: number;
    /**
     * Overlay Inpaint，Overlay original for inpaint
     * @type {boolean}
     * @memberof Options
     */
    overlayInpaint?: boolean;
    /**
     * Cross Attention Optimization，Cross attention optimization
     * @type {string}
     * @memberof Options
     */
    crossAttentionOptimization?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sMinUncond?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sMinUncondAll?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    tokenMergingRatio?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    tokenMergingRatioImg2img?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    tokenMergingRatioHr?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    padCondUncond?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    padCondUncondV0?: string;
    /**
     * Persistent Cond Cache，Persistent cond cache
     * @type {boolean}
     * @memberof Options
     */
    persistentCondCache?: boolean;
    /**
     * Batch Cond Uncond，Batch cond/uncond
     * @type {boolean}
     * @memberof Options
     */
    batchCondUncond?: boolean;
    /**
     * Fp8 Storage，FP8 weight
     * @type {string}
     * @memberof Options
     */
    fp8Storage?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    cacheFp16Weight?: string;
    /**
     * Auto Backcompat，Automatic backward compatibility
     * @type {boolean}
     * @memberof Options
     */
    autoBackcompat?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    useOldEmphasisImplementation?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    useOldKarrasSchedulerSigmas?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    noDpmppSdeBatchDeterminism?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    useOldHiresFixWidthHeight?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    hiresFixUseFirstpassConds?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    useOldScheduling?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    useDowncastedAlphaBar?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    refinerSwitchBySampleSteps?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    interrogateKeepModelsInMemory?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    interrogateReturnRanks?: string;
    /**
     * Interrogate Clip Num Beams，BLIP: num_beams
     * @type {number}
     * @memberof Options
     */
    interrogateClipNumBeams?: number;
    /**
     * Interrogate Clip Min Length，BLIP: minimum description length
     * @type {number}
     * @memberof Options
     */
    interrogateClipMinLength?: number;
    /**
     * Interrogate Clip Max Length，BLIP: maximum description length
     * @type {number}
     * @memberof Options
     */
    interrogateClipMaxLength?: number;
    /**
     * Interrogate Clip Dict Limit，CLIP: maximum number of lines in text file
     * @type {number}
     * @memberof Options
     */
    interrogateClipDictLimit?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    interrogateClipSkipCategories?: string;
    /**
     * Interrogate Deepbooru Score Threshold，deepbooru: score threshold
     * @type {number}
     * @memberof Options
     */
    interrogateDeepbooruScoreThreshold?: number;
    /**
     * Deepbooru Sort Alpha，deepbooru: sort tags alphabetically
     * @type {boolean}
     * @memberof Options
     */
    deepbooruSortAlpha?: boolean;
    /**
     * Deepbooru Use Spaces，deepbooru: use spaces in tags
     * @type {boolean}
     * @memberof Options
     */
    deepbooruUseSpaces?: boolean;
    /**
     * Deepbooru Escape，deepbooru: escape (\) brackets
     * @type {boolean}
     * @memberof Options
     */
    deepbooruEscape?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    deepbooruFilterTags?: string;
    /**
     * Extra Networks Show Hidden Directories，Show hidden directories
     * @type {boolean}
     * @memberof Options
     */
    extraNetworksShowHiddenDirectories?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    extraNetworksDirButtonFunction?: string;
    /**
     * Extra Networks Hidden Models，Show cards for models in hidden directories
     * @type {string}
     * @memberof Options
     */
    extraNetworksHiddenModels?: string;
    /**
     * Extra Networks Default Multiplier，Default multiplier for extra networks
     * @type {number}
     * @memberof Options
     */
    extraNetworksDefaultMultiplier?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    extraNetworksCardWidth?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    extraNetworksCardHeight?: string;
    /**
     * Extra Networks Card Text Scale，Card text scale
     * @type {number}
     * @memberof Options
     */
    extraNetworksCardTextScale?: number;
    /**
     * Extra Networks Card Show Desc，Show description on card
     * @type {boolean}
     * @memberof Options
     */
    extraNetworksCardShowDesc?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    extraNetworksCardDescriptionIsHtml?: string;
    /**
     * Extra Networks Card Order Field，Default order field for Extra Networks cards
     * @type {string}
     * @memberof Options
     */
    extraNetworksCardOrderField?: string;
    /**
     * Extra Networks Card Order，Default order for Extra Networks cards
     * @type {string}
     * @memberof Options
     */
    extraNetworksCardOrder?: string;
    /**
     * Extra Networks Tree View Style，Extra Networks directory view style
     * @type {string}
     * @memberof Options
     */
    extraNetworksTreeViewStyle?: string;
    /**
     * Extra Networks Tree View Default Enabled，Show the Extra Networks directory view by default
     * @type {boolean}
     * @memberof Options
     */
    extraNetworksTreeViewDefaultEnabled?: boolean;
    /**
     * Extra Networks Tree View Default Width，Default width for the Extra Networks directory tree view
     * @type {number}
     * @memberof Options
     */
    extraNetworksTreeViewDefaultWidth?: number;
    /**
     * Extra Networks Add Text Separator，Extra networks separator
     * @type {string}
     * @memberof Options
     */
    extraNetworksAddTextSeparator?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    uiExtraNetworksTabReorder?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    textualInversionPrintAtLoad?: string;
    /**
     * Textual Inversion Add Hashes To Infotext，Add Textual Inversion hashes to infotext
     * @type {boolean}
     * @memberof Options
     */
    textualInversionAddHashesToInfotext?: boolean;
    /**
     * Sd Hypernetwork，Add hypernetwork to prompt
     * @type {string}
     * @memberof Options
     */
    sdHypernetwork?: string;
    /**
     * Keyedit Precision Attention，Precision for (attention:1.1) when editing the prompt with Ctrl+up/down
     * @type {number}
     * @memberof Options
     */
    keyeditPrecisionAttention?: number;
    /**
     * Keyedit Precision Extra，Precision for <extra networks:0.9> when editing the prompt with Ctrl+up/down
     * @type {number}
     * @memberof Options
     */
    keyeditPrecisionExtra?: number;
    /**
     * Keyedit Delimiters，Word delimiters when editing the prompt with Ctrl+up/down
     * @type {string}
     * @memberof Options
     */
    keyeditDelimiters?: string;
    /**
     * Keyedit Delimiters Whitespace，Ctrl+up/down whitespace delimiters
     * @type {Array<string>}
     * @memberof Options
     */
    keyeditDelimitersWhitespace?: Array<string>;
    /**
     * Keyedit Move，Alt+left/right moves prompt elements
     * @type {boolean}
     * @memberof Options
     */
    keyeditMove?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    disableTokenCounters?: string;
    /**
     * Include Styles Into Token Counters，Count tokens of enabled styles
     * @type {boolean}
     * @memberof Options
     */
    includeStylesIntoTokenCounters?: boolean;
    /**
     * Return Grid，Show grid in gallery
     * @type {boolean}
     * @memberof Options
     */
    returnGrid?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    doNotShowImages?: string;
    /**
     * Js Modal Lightbox，Full page image viewer: enable
     * @type {boolean}
     * @memberof Options
     */
    jsModalLightbox?: boolean;
    /**
     * Js Modal Lightbox Initially Zoomed，Full page image viewer: show images zoomed in by default
     * @type {boolean}
     * @memberof Options
     */
    jsModalLightboxInitiallyZoomed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    jsModalLightboxGamepad?: string;
    /**
     * Js Modal Lightbox Gamepad Repeat，Full page image viewer: gamepad repeat period
     * @type {number}
     * @memberof Options
     */
    jsModalLightboxGamepadRepeat?: number;
    /**
     * Sd Webui Modal Lightbox Icon Opacity，Full page image viewer: control icon unfocused opacity
     * @type {number}
     * @memberof Options
     */
    sdWebuiModalLightboxIconOpacity?: number;
    /**
     * Sd Webui Modal Lightbox Toolbar Opacity，Full page image viewer: tool bar opacity
     * @type {number}
     * @memberof Options
     */
    sdWebuiModalLightboxToolbarOpacity?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    galleryHeight?: string;
    /**
     * Open Dir Button Choice，What directory the [📂] button opens
     * @type {string}
     * @memberof Options
     */
    openDirButtonChoice?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    compactPromptBox?: string;
    /**
     * Samplers In Dropdown，Use dropdown for sampler selection instead of radio group
     * @type {boolean}
     * @memberof Options
     */
    samplersInDropdown?: boolean;
    /**
     * Dimensions And Batch Together，Show Width/Height and Batch sliders in same row
     * @type {boolean}
     * @memberof Options
     */
    dimensionsAndBatchTogether?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sdCheckpointDropdownUseShort?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    hiresFixShowSampler?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    hiresFixShowPrompts?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    txt2imgSettingsAccordion?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    img2imgSettingsAccordion?: string;
    /**
     * Interrupt After Current，Don't Interrupt in the middle
     * @type {boolean}
     * @memberof Options
     */
    interruptAfterCurrent?: boolean;
    /**
     * Localization，Localization
     * @type {string}
     * @memberof Options
     */
    localization?: string;
    /**
     * Quicksettings List，Quicksettings list
     * @type {Array<string>}
     * @memberof Options
     */
    quicksettingsList?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    uiTabOrder?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    hiddenTabs?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    uiReorderList?: string;
    /**
     * Gradio Theme，Gradio theme
     * @type {string}
     * @memberof Options
     */
    gradioTheme?: string;
    /**
     * Gradio Themes Cache，Cache gradio themes locally
     * @type {boolean}
     * @memberof Options
     */
    gradioThemesCache?: boolean;
    /**
     * Show Progress In Title，Show generation progress in window title.
     * @type {boolean}
     * @memberof Options
     */
    showProgressInTitle?: boolean;
    /**
     * Send Seed，Send seed when sending prompt or image to other interface
     * @type {boolean}
     * @memberof Options
     */
    sendSeed?: boolean;
    /**
     * Send Size，Send size when sending prompt or image to another interface
     * @type {boolean}
     * @memberof Options
     */
    sendSize?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    enableReloadingUiScripts?: string;
    /**
     * Infotext Explanation
     * @type {string}
     * @memberof Options
     */
    infotextExplanation?: string;
    /**
     * Enable Pnginfo，Write infotext to metadata of the generated image
     * @type {boolean}
     * @memberof Options
     */
    enablePnginfo?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    saveTxt?: string;
    /**
     * Add Model Name To Info，Add model name to infotext
     * @type {boolean}
     * @memberof Options
     */
    addModelNameToInfo?: boolean;
    /**
     * Add Model Hash To Info，Add model hash to infotext
     * @type {boolean}
     * @memberof Options
     */
    addModelHashToInfo?: boolean;
    /**
     * Add Vae Name To Info，Add VAE name to infotext
     * @type {boolean}
     * @memberof Options
     */
    addVaeNameToInfo?: boolean;
    /**
     * Add Vae Hash To Info，Add VAE hash to infotext
     * @type {boolean}
     * @memberof Options
     */
    addVaeHashToInfo?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    addUserNameToInfo?: string;
    /**
     * Add Version To Infotext，Add program version to infotext
     * @type {boolean}
     * @memberof Options
     */
    addVersionToInfotext?: boolean;
    /**
     * Disable Weights Auto Swap，Disregard checkpoint information from pasted infotext
     * @type {boolean}
     * @memberof Options
     */
    disableWeightsAutoSwap?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    infotextSkipPasting?: string;
    /**
     * Infotext Styles，Infer styles from prompts of pasted infotext
     * @type {string}
     * @memberof Options
     */
    infotextStyles?: string;
    /**
     * Show Progressbar，Show progressbar
     * @type {boolean}
     * @memberof Options
     */
    showProgressbar?: boolean;
    /**
     * Live Previews Enable，Show live previews of the created image
     * @type {boolean}
     * @memberof Options
     */
    livePreviewsEnable?: boolean;
    /**
     * Live Previews Image Format，Live preview file format
     * @type {string}
     * @memberof Options
     */
    livePreviewsImageFormat?: string;
    /**
     * Show Progress Grid，Show previews of all images generated in a batch as a grid
     * @type {boolean}
     * @memberof Options
     */
    showProgressGrid?: boolean;
    /**
     * Show Progress Every N Steps，Live preview display period
     * @type {number}
     * @memberof Options
     */
    showProgressEveryNSteps?: number;
    /**
     * Show Progress Type，Live preview method
     * @type {string}
     * @memberof Options
     */
    showProgressType?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    livePreviewAllowLowvramFull?: string;
    /**
     * Live Preview Content，Live preview subject
     * @type {string}
     * @memberof Options
     */
    livePreviewContent?: string;
    /**
     * Live Preview Refresh Period，Progressbar and preview update period
     * @type {number}
     * @memberof Options
     */
    livePreviewRefreshPeriod?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    livePreviewFastInterrupt?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    jsLivePreviewInModalLightbox?: string;
    /**
     * Prevent Screen Sleep During Generation，Prevent screen sleep during generation
     * @type {boolean}
     * @memberof Options
     */
    preventScreenSleepDuringGeneration?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    hideSamplers?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    etaDdim?: string;
    /**
     * Eta Ancestral，Eta for k-diffusion samplers
     * @type {number}
     * @memberof Options
     */
    etaAncestral?: number;
    /**
     * Ddim Discretize，img2img DDIM discretize
     * @type {string}
     * @memberof Options
     */
    ddimDiscretize?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sChurn?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sTmin?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sTmax?: string;
    /**
     * S Noise，sigma noise
     * @type {number}
     * @memberof Options
     */
    sNoise?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sigmaMin?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sigmaMax?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    rho?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    etaNoiseSeedDelta?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    alwaysDiscardNextToLastSigma?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sgmNoiseMultiplier?: string;
    /**
     * Uni Pc Variant，UniPC variant
     * @type {string}
     * @memberof Options
     */
    uniPcVariant?: string;
    /**
     * Uni Pc Skip Type，UniPC skip type
     * @type {string}
     * @memberof Options
     */
    uniPcSkipType?: string;
    /**
     * Uni Pc Order，UniPC order
     * @type {number}
     * @memberof Options
     */
    uniPcOrder?: number;
    /**
     * Uni Pc Lower Order Final，UniPC lower order final
     * @type {boolean}
     * @memberof Options
     */
    uniPcLowerOrderFinal?: boolean;
    /**
     * Sd Noise Schedule，Noise schedule for sampling
     * @type {string}
     * @memberof Options
     */
    sdNoiseSchedule?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    skipEarlyCond?: string;
    /**
     * Beta Dist Alpha，Beta scheduler - alpha
     * @type {number}
     * @memberof Options
     */
    betaDistAlpha?: number;
    /**
     * Beta Dist Beta，Beta scheduler - beta
     * @type {number}
     * @memberof Options
     */
    betaDistBeta?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    postprocessingEnableInMainUi?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    postprocessingDisableInExtras?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    postprocessingOperationOrder?: string;
    /**
     * Upscaling Max Images In Cache，Maximum number of images in upscaling cache
     * @type {number}
     * @memberof Options
     */
    upscalingMaxImagesInCache?: number;
    /**
     * Postprocessing Existing Caption Action，Action for existing captions
     * @type {string}
     * @memberof Options
     */
    postprocessingExistingCaptionAction?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    disabledExtensions?: string;
    /**
     * Disable All Extensions，Disable all extensions (preserves the list of disabled extensions)
     * @type {string}
     * @memberof Options
     */
    disableAllExtensions?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    restoreConfigStateFile?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    sdCheckpointHash?: string;
    /**
     * Sd Lora，Add network to prompt
     * @type {string}
     * @memberof Options
     */
    sdLora?: string;
    /**
     * Lora Preferred Name，When adding to prompt, refer to Lora by
     * @type {string}
     * @memberof Options
     */
    loraPreferredName?: string;
    /**
     * Lora Add Hashes To Infotext，Add Lora hashes to infotext
     * @type {boolean}
     * @memberof Options
     */
    loraAddHashesToInfotext?: boolean;
    /**
     * Lora Bundled Ti To Infotext，Add Lora name as TI hashes for bundled Textual Inversion
     * @type {boolean}
     * @memberof Options
     */
    loraBundledTiToInfotext?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    loraShowAll?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    loraHideUnknownForVersions?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    loraInMemoryLimit?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    loraNotFoundWarningConsole?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    loraNotFoundGradioWarning?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    loraFunctional?: string;
    /**
     * Canvas Hotkey Zoom，Zoom canvas
     * @type {string}
     * @memberof Options
     */
    canvasHotkeyZoom?: string;
    /**
     * Canvas Hotkey Adjust，Adjust brush size
     * @type {string}
     * @memberof Options
     */
    canvasHotkeyAdjust?: string;
    /**
     * Canvas Hotkey Shrink Brush，Shrink the brush size
     * @type {string}
     * @memberof Options
     */
    canvasHotkeyShrinkBrush?: string;
    /**
     * Canvas Hotkey Grow Brush，Enlarge the brush size
     * @type {string}
     * @memberof Options
     */
    canvasHotkeyGrowBrush?: string;
    /**
     * Canvas Hotkey Move，Moving the canvas
     * @type {string}
     * @memberof Options
     */
    canvasHotkeyMove?: string;
    /**
     * Canvas Hotkey Fullscreen，Fullscreen Mode, maximizes the picture so that it fits into the screen and stretches it to its full width 
     * @type {string}
     * @memberof Options
     */
    canvasHotkeyFullscreen?: string;
    /**
     * Canvas Hotkey Reset，Reset zoom and canvas position
     * @type {string}
     * @memberof Options
     */
    canvasHotkeyReset?: string;
    /**
     * Canvas Hotkey Overlap，Toggle overlap
     * @type {string}
     * @memberof Options
     */
    canvasHotkeyOverlap?: string;
    /**
     * Canvas Show Tooltip，Enable tooltip on the canvas
     * @type {boolean}
     * @memberof Options
     */
    canvasShowTooltip?: boolean;
    /**
     * Canvas Auto Expand，Automatically expands an image that does not fit completely in the canvas area, similar to manually pressing the S and R buttons
     * @type {boolean}
     * @memberof Options
     */
    canvasAutoExpand?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    canvasBlurPrompt?: string;
    /**
     * Canvas Disabled Functions，Disable function that you don't use
     * @type {Array<string>}
     * @memberof Options
     */
    canvasDisabledFunctions?: Array<string>;
    /**
     * Settings In Ui
     * @type {string}
     * @memberof Options
     */
    settingsInUi?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    extraOptionsTxt2img?: string;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    extraOptionsImg2img?: string;
    /**
     * Extra Options Cols，Number of columns for added settings
     * @type {number}
     * @memberof Options
     */
    extraOptionsCols?: number;
    /**
     * 
     * @type {string}
     * @memberof Options
     */
    extraOptionsAccordion?: string;
}

export function OptionsFromJSON(json: any): Options {
    return OptionsFromJSONTyped(json, false);
}

export function OptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Options {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'samplesSave': !exists(json, 'samples_save') ? undefined : json['samples_save'],
        'samplesFormat': !exists(json, 'samples_format') ? undefined : json['samples_format'],
        'samplesFilenamePattern': !exists(json, 'samples_filename_pattern') ? undefined : json['samples_filename_pattern'],
        'saveImagesAddNumber': !exists(json, 'save_images_add_number') ? undefined : json['save_images_add_number'],
        'saveImagesReplaceAction': !exists(json, 'save_images_replace_action') ? undefined : json['save_images_replace_action'],
        'gridSave': !exists(json, 'grid_save') ? undefined : json['grid_save'],
        'gridFormat': !exists(json, 'grid_format') ? undefined : json['grid_format'],
        'gridExtendedFilename': !exists(json, 'grid_extended_filename') ? undefined : json['grid_extended_filename'],
        'gridOnlyIfMultiple': !exists(json, 'grid_only_if_multiple') ? undefined : json['grid_only_if_multiple'],
        'gridPreventEmptySpots': !exists(json, 'grid_prevent_empty_spots') ? undefined : json['grid_prevent_empty_spots'],
        'gridZipFilenamePattern': !exists(json, 'grid_zip_filename_pattern') ? undefined : json['grid_zip_filename_pattern'],
        'nRows': !exists(json, 'n_rows') ? undefined : json['n_rows'],
        'font': !exists(json, 'font') ? undefined : json['font'],
        'gridTextActiveColor': !exists(json, 'grid_text_active_color') ? undefined : json['grid_text_active_color'],
        'gridTextInactiveColor': !exists(json, 'grid_text_inactive_color') ? undefined : json['grid_text_inactive_color'],
        'gridBackgroundColor': !exists(json, 'grid_background_color') ? undefined : json['grid_background_color'],
        'saveImagesBeforeFaceRestoration': !exists(json, 'save_images_before_face_restoration') ? undefined : json['save_images_before_face_restoration'],
        'saveImagesBeforeHighresFix': !exists(json, 'save_images_before_highres_fix') ? undefined : json['save_images_before_highres_fix'],
        'saveImagesBeforeColorCorrection': !exists(json, 'save_images_before_color_correction') ? undefined : json['save_images_before_color_correction'],
        'saveMask': !exists(json, 'save_mask') ? undefined : json['save_mask'],
        'saveMaskComposite': !exists(json, 'save_mask_composite') ? undefined : json['save_mask_composite'],
        'jpegQuality': !exists(json, 'jpeg_quality') ? undefined : json['jpeg_quality'],
        'webpLossless': !exists(json, 'webp_lossless') ? undefined : json['webp_lossless'],
        'exportFor4chan': !exists(json, 'export_for_4chan') ? undefined : json['export_for_4chan'],
        'imgDownscaleThreshold': !exists(json, 'img_downscale_threshold') ? undefined : json['img_downscale_threshold'],
        'targetSideLength': !exists(json, 'target_side_length') ? undefined : json['target_side_length'],
        'imgMaxSizeMp': !exists(json, 'img_max_size_mp') ? undefined : json['img_max_size_mp'],
        'useOriginalNameBatch': !exists(json, 'use_original_name_batch') ? undefined : json['use_original_name_batch'],
        'useUpscalerNameAsSuffix': !exists(json, 'use_upscaler_name_as_suffix') ? undefined : json['use_upscaler_name_as_suffix'],
        'saveSelectedOnly': !exists(json, 'save_selected_only') ? undefined : json['save_selected_only'],
        'saveWriteLogCsv': !exists(json, 'save_write_log_csv') ? undefined : json['save_write_log_csv'],
        'saveInitImg': !exists(json, 'save_init_img') ? undefined : json['save_init_img'],
        'tempDir': !exists(json, 'temp_dir') ? undefined : json['temp_dir'],
        'cleanTempDirAtStart': !exists(json, 'clean_temp_dir_at_start') ? undefined : json['clean_temp_dir_at_start'],
        'saveIncompleteImages': !exists(json, 'save_incomplete_images') ? undefined : json['save_incomplete_images'],
        'notificationAudio': !exists(json, 'notification_audio') ? undefined : json['notification_audio'],
        'notificationVolume': !exists(json, 'notification_volume') ? undefined : json['notification_volume'],
        'outdirSamples': !exists(json, 'outdir_samples') ? undefined : json['outdir_samples'],
        'outdirTxt2imgSamples': !exists(json, 'outdir_txt2img_samples') ? undefined : json['outdir_txt2img_samples'],
        'outdirImg2imgSamples': !exists(json, 'outdir_img2img_samples') ? undefined : json['outdir_img2img_samples'],
        'outdirExtrasSamples': !exists(json, 'outdir_extras_samples') ? undefined : json['outdir_extras_samples'],
        'outdirGrids': !exists(json, 'outdir_grids') ? undefined : json['outdir_grids'],
        'outdirTxt2imgGrids': !exists(json, 'outdir_txt2img_grids') ? undefined : json['outdir_txt2img_grids'],
        'outdirImg2imgGrids': !exists(json, 'outdir_img2img_grids') ? undefined : json['outdir_img2img_grids'],
        'outdirSave': !exists(json, 'outdir_save') ? undefined : json['outdir_save'],
        'outdirInitImages': !exists(json, 'outdir_init_images') ? undefined : json['outdir_init_images'],
        'saveToDirs': !exists(json, 'save_to_dirs') ? undefined : json['save_to_dirs'],
        'gridSaveToDirs': !exists(json, 'grid_save_to_dirs') ? undefined : json['grid_save_to_dirs'],
        'useSaveToDirsForUi': !exists(json, 'use_save_to_dirs_for_ui') ? undefined : json['use_save_to_dirs_for_ui'],
        'directoriesFilenamePattern': !exists(json, 'directories_filename_pattern') ? undefined : json['directories_filename_pattern'],
        'directoriesMaxPromptWords': !exists(json, 'directories_max_prompt_words') ? undefined : json['directories_max_prompt_words'],
        'eSRGANTile': !exists(json, 'ESRGAN_tile') ? undefined : json['ESRGAN_tile'],
        'eSRGANTileOverlap': !exists(json, 'ESRGAN_tile_overlap') ? undefined : json['ESRGAN_tile_overlap'],
        'realesrganEnabledModels': !exists(json, 'realesrgan_enabled_models') ? undefined : json['realesrgan_enabled_models'],
        'datEnabledModels': !exists(json, 'dat_enabled_models') ? undefined : json['dat_enabled_models'],
        'dATTile': !exists(json, 'DAT_tile') ? undefined : json['DAT_tile'],
        'dATTileOverlap': !exists(json, 'DAT_tile_overlap') ? undefined : json['DAT_tile_overlap'],
        'upscalerForImg2img': !exists(json, 'upscaler_for_img2img') ? undefined : json['upscaler_for_img2img'],
        'setScaleByWhenChangingUpscaler': !exists(json, 'set_scale_by_when_changing_upscaler') ? undefined : json['set_scale_by_when_changing_upscaler'],
        'faceRestoration': !exists(json, 'face_restoration') ? undefined : json['face_restoration'],
        'faceRestorationModel': !exists(json, 'face_restoration_model') ? undefined : json['face_restoration_model'],
        'codeFormerWeight': !exists(json, 'code_former_weight') ? undefined : json['code_former_weight'],
        'faceRestorationUnload': !exists(json, 'face_restoration_unload') ? undefined : json['face_restoration_unload'],
        'autoLaunchBrowser': !exists(json, 'auto_launch_browser') ? undefined : json['auto_launch_browser'],
        'enableConsolePrompts': !exists(json, 'enable_console_prompts') ? undefined : json['enable_console_prompts'],
        'showWarnings': !exists(json, 'show_warnings') ? undefined : json['show_warnings'],
        'showGradioDeprecationWarnings': !exists(json, 'show_gradio_deprecation_warnings') ? undefined : json['show_gradio_deprecation_warnings'],
        'memmonPollRate': !exists(json, 'memmon_poll_rate') ? undefined : json['memmon_poll_rate'],
        'samplesLogStdout': !exists(json, 'samples_log_stdout') ? undefined : json['samples_log_stdout'],
        'multipleTqdm': !exists(json, 'multiple_tqdm') ? undefined : json['multiple_tqdm'],
        'enableUpscaleProgressbar': !exists(json, 'enable_upscale_progressbar') ? undefined : json['enable_upscale_progressbar'],
        'printHypernetExtra': !exists(json, 'print_hypernet_extra') ? undefined : json['print_hypernet_extra'],
        'listHiddenFiles': !exists(json, 'list_hidden_files') ? undefined : json['list_hidden_files'],
        'disableMmapLoadSafetensors': !exists(json, 'disable_mmap_load_safetensors') ? undefined : json['disable_mmap_load_safetensors'],
        'hideLdmPrints': !exists(json, 'hide_ldm_prints') ? undefined : json['hide_ldm_prints'],
        'dumpStacksOnSignal': !exists(json, 'dump_stacks_on_signal') ? undefined : json['dump_stacks_on_signal'],
        'profilingExplanation': !exists(json, 'profiling_explanation') ? undefined : json['profiling_explanation'],
        'profilingEnable': !exists(json, 'profiling_enable') ? undefined : json['profiling_enable'],
        'profilingActivities': !exists(json, 'profiling_activities') ? undefined : json['profiling_activities'],
        'profilingRecordShapes': !exists(json, 'profiling_record_shapes') ? undefined : json['profiling_record_shapes'],
        'profilingProfileMemory': !exists(json, 'profiling_profile_memory') ? undefined : json['profiling_profile_memory'],
        'profilingWithStack': !exists(json, 'profiling_with_stack') ? undefined : json['profiling_with_stack'],
        'profilingFilename': !exists(json, 'profiling_filename') ? undefined : json['profiling_filename'],
        'apiEnableRequests': !exists(json, 'api_enable_requests') ? undefined : json['api_enable_requests'],
        'apiForbidLocalRequests': !exists(json, 'api_forbid_local_requests') ? undefined : json['api_forbid_local_requests'],
        'apiUseragent': !exists(json, 'api_useragent') ? undefined : json['api_useragent'],
        'unloadModelsWhenTraining': !exists(json, 'unload_models_when_training') ? undefined : json['unload_models_when_training'],
        'pinMemory': !exists(json, 'pin_memory') ? undefined : json['pin_memory'],
        'saveOptimizerState': !exists(json, 'save_optimizer_state') ? undefined : json['save_optimizer_state'],
        'saveTrainingSettingsToTxt': !exists(json, 'save_training_settings_to_txt') ? undefined : json['save_training_settings_to_txt'],
        'datasetFilenameWordRegex': !exists(json, 'dataset_filename_word_regex') ? undefined : json['dataset_filename_word_regex'],
        'datasetFilenameJoinString': !exists(json, 'dataset_filename_join_string') ? undefined : json['dataset_filename_join_string'],
        'trainingImageRepeatsPerEpoch': !exists(json, 'training_image_repeats_per_epoch') ? undefined : json['training_image_repeats_per_epoch'],
        'trainingWriteCsvEvery': !exists(json, 'training_write_csv_every') ? undefined : json['training_write_csv_every'],
        'trainingXattentionOptimizations': !exists(json, 'training_xattention_optimizations') ? undefined : json['training_xattention_optimizations'],
        'trainingEnableTensorboard': !exists(json, 'training_enable_tensorboard') ? undefined : json['training_enable_tensorboard'],
        'trainingTensorboardSaveImages': !exists(json, 'training_tensorboard_save_images') ? undefined : json['training_tensorboard_save_images'],
        'trainingTensorboardFlushEvery': !exists(json, 'training_tensorboard_flush_every') ? undefined : json['training_tensorboard_flush_every'],
        'sdModelCheckpoint': !exists(json, 'sd_model_checkpoint') ? undefined : json['sd_model_checkpoint'],
        'sdCheckpointsLimit': !exists(json, 'sd_checkpoints_limit') ? undefined : json['sd_checkpoints_limit'],
        'sdCheckpointsKeepInCpu': !exists(json, 'sd_checkpoints_keep_in_cpu') ? undefined : json['sd_checkpoints_keep_in_cpu'],
        'sdCheckpointCache': !exists(json, 'sd_checkpoint_cache') ? undefined : json['sd_checkpoint_cache'],
        'sdUnet': !exists(json, 'sd_unet') ? undefined : json['sd_unet'],
        'enableQuantization': !exists(json, 'enable_quantization') ? undefined : json['enable_quantization'],
        'emphasis': !exists(json, 'emphasis') ? undefined : json['emphasis'],
        'enableBatchSeeds': !exists(json, 'enable_batch_seeds') ? undefined : json['enable_batch_seeds'],
        'commaPaddingBacktrack': !exists(json, 'comma_padding_backtrack') ? undefined : json['comma_padding_backtrack'],
        'sdxlClipLSkip': !exists(json, 'sdxl_clip_l_skip') ? undefined : json['sdxl_clip_l_skip'],
        'cLIPStopAtLastLayers': !exists(json, 'CLIP_stop_at_last_layers') ? undefined : json['CLIP_stop_at_last_layers'],
        'upcastAttn': !exists(json, 'upcast_attn') ? undefined : json['upcast_attn'],
        'randnSource': !exists(json, 'randn_source') ? undefined : json['randn_source'],
        'tiling': !exists(json, 'tiling') ? undefined : json['tiling'],
        'hiresFixRefinerPass': !exists(json, 'hires_fix_refiner_pass') ? undefined : json['hires_fix_refiner_pass'],
        'sdxlCropTop': !exists(json, 'sdxl_crop_top') ? undefined : json['sdxl_crop_top'],
        'sdxlCropLeft': !exists(json, 'sdxl_crop_left') ? undefined : json['sdxl_crop_left'],
        'sdxlRefinerLowAestheticScore': !exists(json, 'sdxl_refiner_low_aesthetic_score') ? undefined : json['sdxl_refiner_low_aesthetic_score'],
        'sdxlRefinerHighAestheticScore': !exists(json, 'sdxl_refiner_high_aesthetic_score') ? undefined : json['sdxl_refiner_high_aesthetic_score'],
        'sd3EnableT5': !exists(json, 'sd3_enable_t5') ? undefined : json['sd3_enable_t5'],
        'sdVaeExplanation': !exists(json, 'sd_vae_explanation') ? undefined : json['sd_vae_explanation'],
        'sdVaeCheckpointCache': !exists(json, 'sd_vae_checkpoint_cache') ? undefined : json['sd_vae_checkpoint_cache'],
        'sdVae': !exists(json, 'sd_vae') ? undefined : json['sd_vae'],
        'sdVaeOverridesPerModelPreferences': !exists(json, 'sd_vae_overrides_per_model_preferences') ? undefined : json['sd_vae_overrides_per_model_preferences'],
        'autoVaePrecisionBfloat16': !exists(json, 'auto_vae_precision_bfloat16') ? undefined : json['auto_vae_precision_bfloat16'],
        'autoVaePrecision': !exists(json, 'auto_vae_precision') ? undefined : json['auto_vae_precision'],
        'sdVaeEncodeMethod': !exists(json, 'sd_vae_encode_method') ? undefined : json['sd_vae_encode_method'],
        'sdVaeDecodeMethod': !exists(json, 'sd_vae_decode_method') ? undefined : json['sd_vae_decode_method'],
        'inpaintingMaskWeight': !exists(json, 'inpainting_mask_weight') ? undefined : json['inpainting_mask_weight'],
        'initialNoiseMultiplier': !exists(json, 'initial_noise_multiplier') ? undefined : json['initial_noise_multiplier'],
        'img2imgExtraNoise': !exists(json, 'img2img_extra_noise') ? undefined : json['img2img_extra_noise'],
        'img2imgColorCorrection': !exists(json, 'img2img_color_correction') ? undefined : json['img2img_color_correction'],
        'img2imgFixSteps': !exists(json, 'img2img_fix_steps') ? undefined : json['img2img_fix_steps'],
        'img2imgBackgroundColor': !exists(json, 'img2img_background_color') ? undefined : json['img2img_background_color'],
        'img2imgEditorHeight': !exists(json, 'img2img_editor_height') ? undefined : json['img2img_editor_height'],
        'img2imgSketchDefaultBrushColor': !exists(json, 'img2img_sketch_default_brush_color') ? undefined : json['img2img_sketch_default_brush_color'],
        'img2imgInpaintMaskBrushColor': !exists(json, 'img2img_inpaint_mask_brush_color') ? undefined : json['img2img_inpaint_mask_brush_color'],
        'img2imgInpaintSketchDefaultBrushColor': !exists(json, 'img2img_inpaint_sketch_default_brush_color') ? undefined : json['img2img_inpaint_sketch_default_brush_color'],
        'returnMask': !exists(json, 'return_mask') ? undefined : json['return_mask'],
        'returnMaskComposite': !exists(json, 'return_mask_composite') ? undefined : json['return_mask_composite'],
        'img2imgBatchShowResultsLimit': !exists(json, 'img2img_batch_show_results_limit') ? undefined : json['img2img_batch_show_results_limit'],
        'overlayInpaint': !exists(json, 'overlay_inpaint') ? undefined : json['overlay_inpaint'],
        'crossAttentionOptimization': !exists(json, 'cross_attention_optimization') ? undefined : json['cross_attention_optimization'],
        'sMinUncond': !exists(json, 's_min_uncond') ? undefined : json['s_min_uncond'],
        'sMinUncondAll': !exists(json, 's_min_uncond_all') ? undefined : json['s_min_uncond_all'],
        'tokenMergingRatio': !exists(json, 'token_merging_ratio') ? undefined : json['token_merging_ratio'],
        'tokenMergingRatioImg2img': !exists(json, 'token_merging_ratio_img2img') ? undefined : json['token_merging_ratio_img2img'],
        'tokenMergingRatioHr': !exists(json, 'token_merging_ratio_hr') ? undefined : json['token_merging_ratio_hr'],
        'padCondUncond': !exists(json, 'pad_cond_uncond') ? undefined : json['pad_cond_uncond'],
        'padCondUncondV0': !exists(json, 'pad_cond_uncond_v0') ? undefined : json['pad_cond_uncond_v0'],
        'persistentCondCache': !exists(json, 'persistent_cond_cache') ? undefined : json['persistent_cond_cache'],
        'batchCondUncond': !exists(json, 'batch_cond_uncond') ? undefined : json['batch_cond_uncond'],
        'fp8Storage': !exists(json, 'fp8_storage') ? undefined : json['fp8_storage'],
        'cacheFp16Weight': !exists(json, 'cache_fp16_weight') ? undefined : json['cache_fp16_weight'],
        'autoBackcompat': !exists(json, 'auto_backcompat') ? undefined : json['auto_backcompat'],
        'useOldEmphasisImplementation': !exists(json, 'use_old_emphasis_implementation') ? undefined : json['use_old_emphasis_implementation'],
        'useOldKarrasSchedulerSigmas': !exists(json, 'use_old_karras_scheduler_sigmas') ? undefined : json['use_old_karras_scheduler_sigmas'],
        'noDpmppSdeBatchDeterminism': !exists(json, 'no_dpmpp_sde_batch_determinism') ? undefined : json['no_dpmpp_sde_batch_determinism'],
        'useOldHiresFixWidthHeight': !exists(json, 'use_old_hires_fix_width_height') ? undefined : json['use_old_hires_fix_width_height'],
        'hiresFixUseFirstpassConds': !exists(json, 'hires_fix_use_firstpass_conds') ? undefined : json['hires_fix_use_firstpass_conds'],
        'useOldScheduling': !exists(json, 'use_old_scheduling') ? undefined : json['use_old_scheduling'],
        'useDowncastedAlphaBar': !exists(json, 'use_downcasted_alpha_bar') ? undefined : json['use_downcasted_alpha_bar'],
        'refinerSwitchBySampleSteps': !exists(json, 'refiner_switch_by_sample_steps') ? undefined : json['refiner_switch_by_sample_steps'],
        'interrogateKeepModelsInMemory': !exists(json, 'interrogate_keep_models_in_memory') ? undefined : json['interrogate_keep_models_in_memory'],
        'interrogateReturnRanks': !exists(json, 'interrogate_return_ranks') ? undefined : json['interrogate_return_ranks'],
        'interrogateClipNumBeams': !exists(json, 'interrogate_clip_num_beams') ? undefined : json['interrogate_clip_num_beams'],
        'interrogateClipMinLength': !exists(json, 'interrogate_clip_min_length') ? undefined : json['interrogate_clip_min_length'],
        'interrogateClipMaxLength': !exists(json, 'interrogate_clip_max_length') ? undefined : json['interrogate_clip_max_length'],
        'interrogateClipDictLimit': !exists(json, 'interrogate_clip_dict_limit') ? undefined : json['interrogate_clip_dict_limit'],
        'interrogateClipSkipCategories': !exists(json, 'interrogate_clip_skip_categories') ? undefined : json['interrogate_clip_skip_categories'],
        'interrogateDeepbooruScoreThreshold': !exists(json, 'interrogate_deepbooru_score_threshold') ? undefined : json['interrogate_deepbooru_score_threshold'],
        'deepbooruSortAlpha': !exists(json, 'deepbooru_sort_alpha') ? undefined : json['deepbooru_sort_alpha'],
        'deepbooruUseSpaces': !exists(json, 'deepbooru_use_spaces') ? undefined : json['deepbooru_use_spaces'],
        'deepbooruEscape': !exists(json, 'deepbooru_escape') ? undefined : json['deepbooru_escape'],
        'deepbooruFilterTags': !exists(json, 'deepbooru_filter_tags') ? undefined : json['deepbooru_filter_tags'],
        'extraNetworksShowHiddenDirectories': !exists(json, 'extra_networks_show_hidden_directories') ? undefined : json['extra_networks_show_hidden_directories'],
        'extraNetworksDirButtonFunction': !exists(json, 'extra_networks_dir_button_function') ? undefined : json['extra_networks_dir_button_function'],
        'extraNetworksHiddenModels': !exists(json, 'extra_networks_hidden_models') ? undefined : json['extra_networks_hidden_models'],
        'extraNetworksDefaultMultiplier': !exists(json, 'extra_networks_default_multiplier') ? undefined : json['extra_networks_default_multiplier'],
        'extraNetworksCardWidth': !exists(json, 'extra_networks_card_width') ? undefined : json['extra_networks_card_width'],
        'extraNetworksCardHeight': !exists(json, 'extra_networks_card_height') ? undefined : json['extra_networks_card_height'],
        'extraNetworksCardTextScale': !exists(json, 'extra_networks_card_text_scale') ? undefined : json['extra_networks_card_text_scale'],
        'extraNetworksCardShowDesc': !exists(json, 'extra_networks_card_show_desc') ? undefined : json['extra_networks_card_show_desc'],
        'extraNetworksCardDescriptionIsHtml': !exists(json, 'extra_networks_card_description_is_html') ? undefined : json['extra_networks_card_description_is_html'],
        'extraNetworksCardOrderField': !exists(json, 'extra_networks_card_order_field') ? undefined : json['extra_networks_card_order_field'],
        'extraNetworksCardOrder': !exists(json, 'extra_networks_card_order') ? undefined : json['extra_networks_card_order'],
        'extraNetworksTreeViewStyle': !exists(json, 'extra_networks_tree_view_style') ? undefined : json['extra_networks_tree_view_style'],
        'extraNetworksTreeViewDefaultEnabled': !exists(json, 'extra_networks_tree_view_default_enabled') ? undefined : json['extra_networks_tree_view_default_enabled'],
        'extraNetworksTreeViewDefaultWidth': !exists(json, 'extra_networks_tree_view_default_width') ? undefined : json['extra_networks_tree_view_default_width'],
        'extraNetworksAddTextSeparator': !exists(json, 'extra_networks_add_text_separator') ? undefined : json['extra_networks_add_text_separator'],
        'uiExtraNetworksTabReorder': !exists(json, 'ui_extra_networks_tab_reorder') ? undefined : json['ui_extra_networks_tab_reorder'],
        'textualInversionPrintAtLoad': !exists(json, 'textual_inversion_print_at_load') ? undefined : json['textual_inversion_print_at_load'],
        'textualInversionAddHashesToInfotext': !exists(json, 'textual_inversion_add_hashes_to_infotext') ? undefined : json['textual_inversion_add_hashes_to_infotext'],
        'sdHypernetwork': !exists(json, 'sd_hypernetwork') ? undefined : json['sd_hypernetwork'],
        'keyeditPrecisionAttention': !exists(json, 'keyedit_precision_attention') ? undefined : json['keyedit_precision_attention'],
        'keyeditPrecisionExtra': !exists(json, 'keyedit_precision_extra') ? undefined : json['keyedit_precision_extra'],
        'keyeditDelimiters': !exists(json, 'keyedit_delimiters') ? undefined : json['keyedit_delimiters'],
        'keyeditDelimitersWhitespace': !exists(json, 'keyedit_delimiters_whitespace') ? undefined : json['keyedit_delimiters_whitespace'],
        'keyeditMove': !exists(json, 'keyedit_move') ? undefined : json['keyedit_move'],
        'disableTokenCounters': !exists(json, 'disable_token_counters') ? undefined : json['disable_token_counters'],
        'includeStylesIntoTokenCounters': !exists(json, 'include_styles_into_token_counters') ? undefined : json['include_styles_into_token_counters'],
        'returnGrid': !exists(json, 'return_grid') ? undefined : json['return_grid'],
        'doNotShowImages': !exists(json, 'do_not_show_images') ? undefined : json['do_not_show_images'],
        'jsModalLightbox': !exists(json, 'js_modal_lightbox') ? undefined : json['js_modal_lightbox'],
        'jsModalLightboxInitiallyZoomed': !exists(json, 'js_modal_lightbox_initially_zoomed') ? undefined : json['js_modal_lightbox_initially_zoomed'],
        'jsModalLightboxGamepad': !exists(json, 'js_modal_lightbox_gamepad') ? undefined : json['js_modal_lightbox_gamepad'],
        'jsModalLightboxGamepadRepeat': !exists(json, 'js_modal_lightbox_gamepad_repeat') ? undefined : json['js_modal_lightbox_gamepad_repeat'],
        'sdWebuiModalLightboxIconOpacity': !exists(json, 'sd_webui_modal_lightbox_icon_opacity') ? undefined : json['sd_webui_modal_lightbox_icon_opacity'],
        'sdWebuiModalLightboxToolbarOpacity': !exists(json, 'sd_webui_modal_lightbox_toolbar_opacity') ? undefined : json['sd_webui_modal_lightbox_toolbar_opacity'],
        'galleryHeight': !exists(json, 'gallery_height') ? undefined : json['gallery_height'],
        'openDirButtonChoice': !exists(json, 'open_dir_button_choice') ? undefined : json['open_dir_button_choice'],
        'compactPromptBox': !exists(json, 'compact_prompt_box') ? undefined : json['compact_prompt_box'],
        'samplersInDropdown': !exists(json, 'samplers_in_dropdown') ? undefined : json['samplers_in_dropdown'],
        'dimensionsAndBatchTogether': !exists(json, 'dimensions_and_batch_together') ? undefined : json['dimensions_and_batch_together'],
        'sdCheckpointDropdownUseShort': !exists(json, 'sd_checkpoint_dropdown_use_short') ? undefined : json['sd_checkpoint_dropdown_use_short'],
        'hiresFixShowSampler': !exists(json, 'hires_fix_show_sampler') ? undefined : json['hires_fix_show_sampler'],
        'hiresFixShowPrompts': !exists(json, 'hires_fix_show_prompts') ? undefined : json['hires_fix_show_prompts'],
        'txt2imgSettingsAccordion': !exists(json, 'txt2img_settings_accordion') ? undefined : json['txt2img_settings_accordion'],
        'img2imgSettingsAccordion': !exists(json, 'img2img_settings_accordion') ? undefined : json['img2img_settings_accordion'],
        'interruptAfterCurrent': !exists(json, 'interrupt_after_current') ? undefined : json['interrupt_after_current'],
        'localization': !exists(json, 'localization') ? undefined : json['localization'],
        'quicksettingsList': !exists(json, 'quicksettings_list') ? undefined : json['quicksettings_list'],
        'uiTabOrder': !exists(json, 'ui_tab_order') ? undefined : json['ui_tab_order'],
        'hiddenTabs': !exists(json, 'hidden_tabs') ? undefined : json['hidden_tabs'],
        'uiReorderList': !exists(json, 'ui_reorder_list') ? undefined : json['ui_reorder_list'],
        'gradioTheme': !exists(json, 'gradio_theme') ? undefined : json['gradio_theme'],
        'gradioThemesCache': !exists(json, 'gradio_themes_cache') ? undefined : json['gradio_themes_cache'],
        'showProgressInTitle': !exists(json, 'show_progress_in_title') ? undefined : json['show_progress_in_title'],
        'sendSeed': !exists(json, 'send_seed') ? undefined : json['send_seed'],
        'sendSize': !exists(json, 'send_size') ? undefined : json['send_size'],
        'enableReloadingUiScripts': !exists(json, 'enable_reloading_ui_scripts') ? undefined : json['enable_reloading_ui_scripts'],
        'infotextExplanation': !exists(json, 'infotext_explanation') ? undefined : json['infotext_explanation'],
        'enablePnginfo': !exists(json, 'enable_pnginfo') ? undefined : json['enable_pnginfo'],
        'saveTxt': !exists(json, 'save_txt') ? undefined : json['save_txt'],
        'addModelNameToInfo': !exists(json, 'add_model_name_to_info') ? undefined : json['add_model_name_to_info'],
        'addModelHashToInfo': !exists(json, 'add_model_hash_to_info') ? undefined : json['add_model_hash_to_info'],
        'addVaeNameToInfo': !exists(json, 'add_vae_name_to_info') ? undefined : json['add_vae_name_to_info'],
        'addVaeHashToInfo': !exists(json, 'add_vae_hash_to_info') ? undefined : json['add_vae_hash_to_info'],
        'addUserNameToInfo': !exists(json, 'add_user_name_to_info') ? undefined : json['add_user_name_to_info'],
        'addVersionToInfotext': !exists(json, 'add_version_to_infotext') ? undefined : json['add_version_to_infotext'],
        'disableWeightsAutoSwap': !exists(json, 'disable_weights_auto_swap') ? undefined : json['disable_weights_auto_swap'],
        'infotextSkipPasting': !exists(json, 'infotext_skip_pasting') ? undefined : json['infotext_skip_pasting'],
        'infotextStyles': !exists(json, 'infotext_styles') ? undefined : json['infotext_styles'],
        'showProgressbar': !exists(json, 'show_progressbar') ? undefined : json['show_progressbar'],
        'livePreviewsEnable': !exists(json, 'live_previews_enable') ? undefined : json['live_previews_enable'],
        'livePreviewsImageFormat': !exists(json, 'live_previews_image_format') ? undefined : json['live_previews_image_format'],
        'showProgressGrid': !exists(json, 'show_progress_grid') ? undefined : json['show_progress_grid'],
        'showProgressEveryNSteps': !exists(json, 'show_progress_every_n_steps') ? undefined : json['show_progress_every_n_steps'],
        'showProgressType': !exists(json, 'show_progress_type') ? undefined : json['show_progress_type'],
        'livePreviewAllowLowvramFull': !exists(json, 'live_preview_allow_lowvram_full') ? undefined : json['live_preview_allow_lowvram_full'],
        'livePreviewContent': !exists(json, 'live_preview_content') ? undefined : json['live_preview_content'],
        'livePreviewRefreshPeriod': !exists(json, 'live_preview_refresh_period') ? undefined : json['live_preview_refresh_period'],
        'livePreviewFastInterrupt': !exists(json, 'live_preview_fast_interrupt') ? undefined : json['live_preview_fast_interrupt'],
        'jsLivePreviewInModalLightbox': !exists(json, 'js_live_preview_in_modal_lightbox') ? undefined : json['js_live_preview_in_modal_lightbox'],
        'preventScreenSleepDuringGeneration': !exists(json, 'prevent_screen_sleep_during_generation') ? undefined : json['prevent_screen_sleep_during_generation'],
        'hideSamplers': !exists(json, 'hide_samplers') ? undefined : json['hide_samplers'],
        'etaDdim': !exists(json, 'eta_ddim') ? undefined : json['eta_ddim'],
        'etaAncestral': !exists(json, 'eta_ancestral') ? undefined : json['eta_ancestral'],
        'ddimDiscretize': !exists(json, 'ddim_discretize') ? undefined : json['ddim_discretize'],
        'sChurn': !exists(json, 's_churn') ? undefined : json['s_churn'],
        'sTmin': !exists(json, 's_tmin') ? undefined : json['s_tmin'],
        'sTmax': !exists(json, 's_tmax') ? undefined : json['s_tmax'],
        'sNoise': !exists(json, 's_noise') ? undefined : json['s_noise'],
        'sigmaMin': !exists(json, 'sigma_min') ? undefined : json['sigma_min'],
        'sigmaMax': !exists(json, 'sigma_max') ? undefined : json['sigma_max'],
        'rho': !exists(json, 'rho') ? undefined : json['rho'],
        'etaNoiseSeedDelta': !exists(json, 'eta_noise_seed_delta') ? undefined : json['eta_noise_seed_delta'],
        'alwaysDiscardNextToLastSigma': !exists(json, 'always_discard_next_to_last_sigma') ? undefined : json['always_discard_next_to_last_sigma'],
        'sgmNoiseMultiplier': !exists(json, 'sgm_noise_multiplier') ? undefined : json['sgm_noise_multiplier'],
        'uniPcVariant': !exists(json, 'uni_pc_variant') ? undefined : json['uni_pc_variant'],
        'uniPcSkipType': !exists(json, 'uni_pc_skip_type') ? undefined : json['uni_pc_skip_type'],
        'uniPcOrder': !exists(json, 'uni_pc_order') ? undefined : json['uni_pc_order'],
        'uniPcLowerOrderFinal': !exists(json, 'uni_pc_lower_order_final') ? undefined : json['uni_pc_lower_order_final'],
        'sdNoiseSchedule': !exists(json, 'sd_noise_schedule') ? undefined : json['sd_noise_schedule'],
        'skipEarlyCond': !exists(json, 'skip_early_cond') ? undefined : json['skip_early_cond'],
        'betaDistAlpha': !exists(json, 'beta_dist_alpha') ? undefined : json['beta_dist_alpha'],
        'betaDistBeta': !exists(json, 'beta_dist_beta') ? undefined : json['beta_dist_beta'],
        'postprocessingEnableInMainUi': !exists(json, 'postprocessing_enable_in_main_ui') ? undefined : json['postprocessing_enable_in_main_ui'],
        'postprocessingDisableInExtras': !exists(json, 'postprocessing_disable_in_extras') ? undefined : json['postprocessing_disable_in_extras'],
        'postprocessingOperationOrder': !exists(json, 'postprocessing_operation_order') ? undefined : json['postprocessing_operation_order'],
        'upscalingMaxImagesInCache': !exists(json, 'upscaling_max_images_in_cache') ? undefined : json['upscaling_max_images_in_cache'],
        'postprocessingExistingCaptionAction': !exists(json, 'postprocessing_existing_caption_action') ? undefined : json['postprocessing_existing_caption_action'],
        'disabledExtensions': !exists(json, 'disabled_extensions') ? undefined : json['disabled_extensions'],
        'disableAllExtensions': !exists(json, 'disable_all_extensions') ? undefined : json['disable_all_extensions'],
        'restoreConfigStateFile': !exists(json, 'restore_config_state_file') ? undefined : json['restore_config_state_file'],
        'sdCheckpointHash': !exists(json, 'sd_checkpoint_hash') ? undefined : json['sd_checkpoint_hash'],
        'sdLora': !exists(json, 'sd_lora') ? undefined : json['sd_lora'],
        'loraPreferredName': !exists(json, 'lora_preferred_name') ? undefined : json['lora_preferred_name'],
        'loraAddHashesToInfotext': !exists(json, 'lora_add_hashes_to_infotext') ? undefined : json['lora_add_hashes_to_infotext'],
        'loraBundledTiToInfotext': !exists(json, 'lora_bundled_ti_to_infotext') ? undefined : json['lora_bundled_ti_to_infotext'],
        'loraShowAll': !exists(json, 'lora_show_all') ? undefined : json['lora_show_all'],
        'loraHideUnknownForVersions': !exists(json, 'lora_hide_unknown_for_versions') ? undefined : json['lora_hide_unknown_for_versions'],
        'loraInMemoryLimit': !exists(json, 'lora_in_memory_limit') ? undefined : json['lora_in_memory_limit'],
        'loraNotFoundWarningConsole': !exists(json, 'lora_not_found_warning_console') ? undefined : json['lora_not_found_warning_console'],
        'loraNotFoundGradioWarning': !exists(json, 'lora_not_found_gradio_warning') ? undefined : json['lora_not_found_gradio_warning'],
        'loraFunctional': !exists(json, 'lora_functional') ? undefined : json['lora_functional'],
        'canvasHotkeyZoom': !exists(json, 'canvas_hotkey_zoom') ? undefined : json['canvas_hotkey_zoom'],
        'canvasHotkeyAdjust': !exists(json, 'canvas_hotkey_adjust') ? undefined : json['canvas_hotkey_adjust'],
        'canvasHotkeyShrinkBrush': !exists(json, 'canvas_hotkey_shrink_brush') ? undefined : json['canvas_hotkey_shrink_brush'],
        'canvasHotkeyGrowBrush': !exists(json, 'canvas_hotkey_grow_brush') ? undefined : json['canvas_hotkey_grow_brush'],
        'canvasHotkeyMove': !exists(json, 'canvas_hotkey_move') ? undefined : json['canvas_hotkey_move'],
        'canvasHotkeyFullscreen': !exists(json, 'canvas_hotkey_fullscreen') ? undefined : json['canvas_hotkey_fullscreen'],
        'canvasHotkeyReset': !exists(json, 'canvas_hotkey_reset') ? undefined : json['canvas_hotkey_reset'],
        'canvasHotkeyOverlap': !exists(json, 'canvas_hotkey_overlap') ? undefined : json['canvas_hotkey_overlap'],
        'canvasShowTooltip': !exists(json, 'canvas_show_tooltip') ? undefined : json['canvas_show_tooltip'],
        'canvasAutoExpand': !exists(json, 'canvas_auto_expand') ? undefined : json['canvas_auto_expand'],
        'canvasBlurPrompt': !exists(json, 'canvas_blur_prompt') ? undefined : json['canvas_blur_prompt'],
        'canvasDisabledFunctions': !exists(json, 'canvas_disabled_functions') ? undefined : json['canvas_disabled_functions'],
        'settingsInUi': !exists(json, 'settings_in_ui') ? undefined : json['settings_in_ui'],
        'extraOptionsTxt2img': !exists(json, 'extra_options_txt2img') ? undefined : json['extra_options_txt2img'],
        'extraOptionsImg2img': !exists(json, 'extra_options_img2img') ? undefined : json['extra_options_img2img'],
        'extraOptionsCols': !exists(json, 'extra_options_cols') ? undefined : json['extra_options_cols'],
        'extraOptionsAccordion': !exists(json, 'extra_options_accordion') ? undefined : json['extra_options_accordion'],
    };
}

export function OptionsToJSON(value?: Options | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'samples_save': value.samplesSave,
        'samples_format': value.samplesFormat,
        'samples_filename_pattern': value.samplesFilenamePattern,
        'save_images_add_number': value.saveImagesAddNumber,
        'save_images_replace_action': value.saveImagesReplaceAction,
        'grid_save': value.gridSave,
        'grid_format': value.gridFormat,
        'grid_extended_filename': value.gridExtendedFilename,
        'grid_only_if_multiple': value.gridOnlyIfMultiple,
        'grid_prevent_empty_spots': value.gridPreventEmptySpots,
        'grid_zip_filename_pattern': value.gridZipFilenamePattern,
        'n_rows': value.nRows,
        'font': value.font,
        'grid_text_active_color': value.gridTextActiveColor,
        'grid_text_inactive_color': value.gridTextInactiveColor,
        'grid_background_color': value.gridBackgroundColor,
        'save_images_before_face_restoration': value.saveImagesBeforeFaceRestoration,
        'save_images_before_highres_fix': value.saveImagesBeforeHighresFix,
        'save_images_before_color_correction': value.saveImagesBeforeColorCorrection,
        'save_mask': value.saveMask,
        'save_mask_composite': value.saveMaskComposite,
        'jpeg_quality': value.jpegQuality,
        'webp_lossless': value.webpLossless,
        'export_for_4chan': value.exportFor4chan,
        'img_downscale_threshold': value.imgDownscaleThreshold,
        'target_side_length': value.targetSideLength,
        'img_max_size_mp': value.imgMaxSizeMp,
        'use_original_name_batch': value.useOriginalNameBatch,
        'use_upscaler_name_as_suffix': value.useUpscalerNameAsSuffix,
        'save_selected_only': value.saveSelectedOnly,
        'save_write_log_csv': value.saveWriteLogCsv,
        'save_init_img': value.saveInitImg,
        'temp_dir': value.tempDir,
        'clean_temp_dir_at_start': value.cleanTempDirAtStart,
        'save_incomplete_images': value.saveIncompleteImages,
        'notification_audio': value.notificationAudio,
        'notification_volume': value.notificationVolume,
        'outdir_samples': value.outdirSamples,
        'outdir_txt2img_samples': value.outdirTxt2imgSamples,
        'outdir_img2img_samples': value.outdirImg2imgSamples,
        'outdir_extras_samples': value.outdirExtrasSamples,
        'outdir_grids': value.outdirGrids,
        'outdir_txt2img_grids': value.outdirTxt2imgGrids,
        'outdir_img2img_grids': value.outdirImg2imgGrids,
        'outdir_save': value.outdirSave,
        'outdir_init_images': value.outdirInitImages,
        'save_to_dirs': value.saveToDirs,
        'grid_save_to_dirs': value.gridSaveToDirs,
        'use_save_to_dirs_for_ui': value.useSaveToDirsForUi,
        'directories_filename_pattern': value.directoriesFilenamePattern,
        'directories_max_prompt_words': value.directoriesMaxPromptWords,
        'ESRGAN_tile': value.eSRGANTile,
        'ESRGAN_tile_overlap': value.eSRGANTileOverlap,
        'realesrgan_enabled_models': value.realesrganEnabledModels,
        'dat_enabled_models': value.datEnabledModels,
        'DAT_tile': value.dATTile,
        'DAT_tile_overlap': value.dATTileOverlap,
        'upscaler_for_img2img': value.upscalerForImg2img,
        'set_scale_by_when_changing_upscaler': value.setScaleByWhenChangingUpscaler,
        'face_restoration': value.faceRestoration,
        'face_restoration_model': value.faceRestorationModel,
        'code_former_weight': value.codeFormerWeight,
        'face_restoration_unload': value.faceRestorationUnload,
        'auto_launch_browser': value.autoLaunchBrowser,
        'enable_console_prompts': value.enableConsolePrompts,
        'show_warnings': value.showWarnings,
        'show_gradio_deprecation_warnings': value.showGradioDeprecationWarnings,
        'memmon_poll_rate': value.memmonPollRate,
        'samples_log_stdout': value.samplesLogStdout,
        'multiple_tqdm': value.multipleTqdm,
        'enable_upscale_progressbar': value.enableUpscaleProgressbar,
        'print_hypernet_extra': value.printHypernetExtra,
        'list_hidden_files': value.listHiddenFiles,
        'disable_mmap_load_safetensors': value.disableMmapLoadSafetensors,
        'hide_ldm_prints': value.hideLdmPrints,
        'dump_stacks_on_signal': value.dumpStacksOnSignal,
        'profiling_explanation': value.profilingExplanation,
        'profiling_enable': value.profilingEnable,
        'profiling_activities': value.profilingActivities,
        'profiling_record_shapes': value.profilingRecordShapes,
        'profiling_profile_memory': value.profilingProfileMemory,
        'profiling_with_stack': value.profilingWithStack,
        'profiling_filename': value.profilingFilename,
        'api_enable_requests': value.apiEnableRequests,
        'api_forbid_local_requests': value.apiForbidLocalRequests,
        'api_useragent': value.apiUseragent,
        'unload_models_when_training': value.unloadModelsWhenTraining,
        'pin_memory': value.pinMemory,
        'save_optimizer_state': value.saveOptimizerState,
        'save_training_settings_to_txt': value.saveTrainingSettingsToTxt,
        'dataset_filename_word_regex': value.datasetFilenameWordRegex,
        'dataset_filename_join_string': value.datasetFilenameJoinString,
        'training_image_repeats_per_epoch': value.trainingImageRepeatsPerEpoch,
        'training_write_csv_every': value.trainingWriteCsvEvery,
        'training_xattention_optimizations': value.trainingXattentionOptimizations,
        'training_enable_tensorboard': value.trainingEnableTensorboard,
        'training_tensorboard_save_images': value.trainingTensorboardSaveImages,
        'training_tensorboard_flush_every': value.trainingTensorboardFlushEvery,
        'sd_model_checkpoint': value.sdModelCheckpoint,
        'sd_checkpoints_limit': value.sdCheckpointsLimit,
        'sd_checkpoints_keep_in_cpu': value.sdCheckpointsKeepInCpu,
        'sd_checkpoint_cache': value.sdCheckpointCache,
        'sd_unet': value.sdUnet,
        'enable_quantization': value.enableQuantization,
        'emphasis': value.emphasis,
        'enable_batch_seeds': value.enableBatchSeeds,
        'comma_padding_backtrack': value.commaPaddingBacktrack,
        'sdxl_clip_l_skip': value.sdxlClipLSkip,
        'CLIP_stop_at_last_layers': value.cLIPStopAtLastLayers,
        'upcast_attn': value.upcastAttn,
        'randn_source': value.randnSource,
        'tiling': value.tiling,
        'hires_fix_refiner_pass': value.hiresFixRefinerPass,
        'sdxl_crop_top': value.sdxlCropTop,
        'sdxl_crop_left': value.sdxlCropLeft,
        'sdxl_refiner_low_aesthetic_score': value.sdxlRefinerLowAestheticScore,
        'sdxl_refiner_high_aesthetic_score': value.sdxlRefinerHighAestheticScore,
        'sd3_enable_t5': value.sd3EnableT5,
        'sd_vae_explanation': value.sdVaeExplanation,
        'sd_vae_checkpoint_cache': value.sdVaeCheckpointCache,
        'sd_vae': value.sdVae,
        'sd_vae_overrides_per_model_preferences': value.sdVaeOverridesPerModelPreferences,
        'auto_vae_precision_bfloat16': value.autoVaePrecisionBfloat16,
        'auto_vae_precision': value.autoVaePrecision,
        'sd_vae_encode_method': value.sdVaeEncodeMethod,
        'sd_vae_decode_method': value.sdVaeDecodeMethod,
        'inpainting_mask_weight': value.inpaintingMaskWeight,
        'initial_noise_multiplier': value.initialNoiseMultiplier,
        'img2img_extra_noise': value.img2imgExtraNoise,
        'img2img_color_correction': value.img2imgColorCorrection,
        'img2img_fix_steps': value.img2imgFixSteps,
        'img2img_background_color': value.img2imgBackgroundColor,
        'img2img_editor_height': value.img2imgEditorHeight,
        'img2img_sketch_default_brush_color': value.img2imgSketchDefaultBrushColor,
        'img2img_inpaint_mask_brush_color': value.img2imgInpaintMaskBrushColor,
        'img2img_inpaint_sketch_default_brush_color': value.img2imgInpaintSketchDefaultBrushColor,
        'return_mask': value.returnMask,
        'return_mask_composite': value.returnMaskComposite,
        'img2img_batch_show_results_limit': value.img2imgBatchShowResultsLimit,
        'overlay_inpaint': value.overlayInpaint,
        'cross_attention_optimization': value.crossAttentionOptimization,
        's_min_uncond': value.sMinUncond,
        's_min_uncond_all': value.sMinUncondAll,
        'token_merging_ratio': value.tokenMergingRatio,
        'token_merging_ratio_img2img': value.tokenMergingRatioImg2img,
        'token_merging_ratio_hr': value.tokenMergingRatioHr,
        'pad_cond_uncond': value.padCondUncond,
        'pad_cond_uncond_v0': value.padCondUncondV0,
        'persistent_cond_cache': value.persistentCondCache,
        'batch_cond_uncond': value.batchCondUncond,
        'fp8_storage': value.fp8Storage,
        'cache_fp16_weight': value.cacheFp16Weight,
        'auto_backcompat': value.autoBackcompat,
        'use_old_emphasis_implementation': value.useOldEmphasisImplementation,
        'use_old_karras_scheduler_sigmas': value.useOldKarrasSchedulerSigmas,
        'no_dpmpp_sde_batch_determinism': value.noDpmppSdeBatchDeterminism,
        'use_old_hires_fix_width_height': value.useOldHiresFixWidthHeight,
        'hires_fix_use_firstpass_conds': value.hiresFixUseFirstpassConds,
        'use_old_scheduling': value.useOldScheduling,
        'use_downcasted_alpha_bar': value.useDowncastedAlphaBar,
        'refiner_switch_by_sample_steps': value.refinerSwitchBySampleSteps,
        'interrogate_keep_models_in_memory': value.interrogateKeepModelsInMemory,
        'interrogate_return_ranks': value.interrogateReturnRanks,
        'interrogate_clip_num_beams': value.interrogateClipNumBeams,
        'interrogate_clip_min_length': value.interrogateClipMinLength,
        'interrogate_clip_max_length': value.interrogateClipMaxLength,
        'interrogate_clip_dict_limit': value.interrogateClipDictLimit,
        'interrogate_clip_skip_categories': value.interrogateClipSkipCategories,
        'interrogate_deepbooru_score_threshold': value.interrogateDeepbooruScoreThreshold,
        'deepbooru_sort_alpha': value.deepbooruSortAlpha,
        'deepbooru_use_spaces': value.deepbooruUseSpaces,
        'deepbooru_escape': value.deepbooruEscape,
        'deepbooru_filter_tags': value.deepbooruFilterTags,
        'extra_networks_show_hidden_directories': value.extraNetworksShowHiddenDirectories,
        'extra_networks_dir_button_function': value.extraNetworksDirButtonFunction,
        'extra_networks_hidden_models': value.extraNetworksHiddenModels,
        'extra_networks_default_multiplier': value.extraNetworksDefaultMultiplier,
        'extra_networks_card_width': value.extraNetworksCardWidth,
        'extra_networks_card_height': value.extraNetworksCardHeight,
        'extra_networks_card_text_scale': value.extraNetworksCardTextScale,
        'extra_networks_card_show_desc': value.extraNetworksCardShowDesc,
        'extra_networks_card_description_is_html': value.extraNetworksCardDescriptionIsHtml,
        'extra_networks_card_order_field': value.extraNetworksCardOrderField,
        'extra_networks_card_order': value.extraNetworksCardOrder,
        'extra_networks_tree_view_style': value.extraNetworksTreeViewStyle,
        'extra_networks_tree_view_default_enabled': value.extraNetworksTreeViewDefaultEnabled,
        'extra_networks_tree_view_default_width': value.extraNetworksTreeViewDefaultWidth,
        'extra_networks_add_text_separator': value.extraNetworksAddTextSeparator,
        'ui_extra_networks_tab_reorder': value.uiExtraNetworksTabReorder,
        'textual_inversion_print_at_load': value.textualInversionPrintAtLoad,
        'textual_inversion_add_hashes_to_infotext': value.textualInversionAddHashesToInfotext,
        'sd_hypernetwork': value.sdHypernetwork,
        'keyedit_precision_attention': value.keyeditPrecisionAttention,
        'keyedit_precision_extra': value.keyeditPrecisionExtra,
        'keyedit_delimiters': value.keyeditDelimiters,
        'keyedit_delimiters_whitespace': value.keyeditDelimitersWhitespace,
        'keyedit_move': value.keyeditMove,
        'disable_token_counters': value.disableTokenCounters,
        'include_styles_into_token_counters': value.includeStylesIntoTokenCounters,
        'return_grid': value.returnGrid,
        'do_not_show_images': value.doNotShowImages,
        'js_modal_lightbox': value.jsModalLightbox,
        'js_modal_lightbox_initially_zoomed': value.jsModalLightboxInitiallyZoomed,
        'js_modal_lightbox_gamepad': value.jsModalLightboxGamepad,
        'js_modal_lightbox_gamepad_repeat': value.jsModalLightboxGamepadRepeat,
        'sd_webui_modal_lightbox_icon_opacity': value.sdWebuiModalLightboxIconOpacity,
        'sd_webui_modal_lightbox_toolbar_opacity': value.sdWebuiModalLightboxToolbarOpacity,
        'gallery_height': value.galleryHeight,
        'open_dir_button_choice': value.openDirButtonChoice,
        'compact_prompt_box': value.compactPromptBox,
        'samplers_in_dropdown': value.samplersInDropdown,
        'dimensions_and_batch_together': value.dimensionsAndBatchTogether,
        'sd_checkpoint_dropdown_use_short': value.sdCheckpointDropdownUseShort,
        'hires_fix_show_sampler': value.hiresFixShowSampler,
        'hires_fix_show_prompts': value.hiresFixShowPrompts,
        'txt2img_settings_accordion': value.txt2imgSettingsAccordion,
        'img2img_settings_accordion': value.img2imgSettingsAccordion,
        'interrupt_after_current': value.interruptAfterCurrent,
        'localization': value.localization,
        'quicksettings_list': value.quicksettingsList,
        'ui_tab_order': value.uiTabOrder,
        'hidden_tabs': value.hiddenTabs,
        'ui_reorder_list': value.uiReorderList,
        'gradio_theme': value.gradioTheme,
        'gradio_themes_cache': value.gradioThemesCache,
        'show_progress_in_title': value.showProgressInTitle,
        'send_seed': value.sendSeed,
        'send_size': value.sendSize,
        'enable_reloading_ui_scripts': value.enableReloadingUiScripts,
        'infotext_explanation': value.infotextExplanation,
        'enable_pnginfo': value.enablePnginfo,
        'save_txt': value.saveTxt,
        'add_model_name_to_info': value.addModelNameToInfo,
        'add_model_hash_to_info': value.addModelHashToInfo,
        'add_vae_name_to_info': value.addVaeNameToInfo,
        'add_vae_hash_to_info': value.addVaeHashToInfo,
        'add_user_name_to_info': value.addUserNameToInfo,
        'add_version_to_infotext': value.addVersionToInfotext,
        'disable_weights_auto_swap': value.disableWeightsAutoSwap,
        'infotext_skip_pasting': value.infotextSkipPasting,
        'infotext_styles': value.infotextStyles,
        'show_progressbar': value.showProgressbar,
        'live_previews_enable': value.livePreviewsEnable,
        'live_previews_image_format': value.livePreviewsImageFormat,
        'show_progress_grid': value.showProgressGrid,
        'show_progress_every_n_steps': value.showProgressEveryNSteps,
        'show_progress_type': value.showProgressType,
        'live_preview_allow_lowvram_full': value.livePreviewAllowLowvramFull,
        'live_preview_content': value.livePreviewContent,
        'live_preview_refresh_period': value.livePreviewRefreshPeriod,
        'live_preview_fast_interrupt': value.livePreviewFastInterrupt,
        'js_live_preview_in_modal_lightbox': value.jsLivePreviewInModalLightbox,
        'prevent_screen_sleep_during_generation': value.preventScreenSleepDuringGeneration,
        'hide_samplers': value.hideSamplers,
        'eta_ddim': value.etaDdim,
        'eta_ancestral': value.etaAncestral,
        'ddim_discretize': value.ddimDiscretize,
        's_churn': value.sChurn,
        's_tmin': value.sTmin,
        's_tmax': value.sTmax,
        's_noise': value.sNoise,
        'sigma_min': value.sigmaMin,
        'sigma_max': value.sigmaMax,
        'rho': value.rho,
        'eta_noise_seed_delta': value.etaNoiseSeedDelta,
        'always_discard_next_to_last_sigma': value.alwaysDiscardNextToLastSigma,
        'sgm_noise_multiplier': value.sgmNoiseMultiplier,
        'uni_pc_variant': value.uniPcVariant,
        'uni_pc_skip_type': value.uniPcSkipType,
        'uni_pc_order': value.uniPcOrder,
        'uni_pc_lower_order_final': value.uniPcLowerOrderFinal,
        'sd_noise_schedule': value.sdNoiseSchedule,
        'skip_early_cond': value.skipEarlyCond,
        'beta_dist_alpha': value.betaDistAlpha,
        'beta_dist_beta': value.betaDistBeta,
        'postprocessing_enable_in_main_ui': value.postprocessingEnableInMainUi,
        'postprocessing_disable_in_extras': value.postprocessingDisableInExtras,
        'postprocessing_operation_order': value.postprocessingOperationOrder,
        'upscaling_max_images_in_cache': value.upscalingMaxImagesInCache,
        'postprocessing_existing_caption_action': value.postprocessingExistingCaptionAction,
        'disabled_extensions': value.disabledExtensions,
        'disable_all_extensions': value.disableAllExtensions,
        'restore_config_state_file': value.restoreConfigStateFile,
        'sd_checkpoint_hash': value.sdCheckpointHash,
        'sd_lora': value.sdLora,
        'lora_preferred_name': value.loraPreferredName,
        'lora_add_hashes_to_infotext': value.loraAddHashesToInfotext,
        'lora_bundled_ti_to_infotext': value.loraBundledTiToInfotext,
        'lora_show_all': value.loraShowAll,
        'lora_hide_unknown_for_versions': value.loraHideUnknownForVersions,
        'lora_in_memory_limit': value.loraInMemoryLimit,
        'lora_not_found_warning_console': value.loraNotFoundWarningConsole,
        'lora_not_found_gradio_warning': value.loraNotFoundGradioWarning,
        'lora_functional': value.loraFunctional,
        'canvas_hotkey_zoom': value.canvasHotkeyZoom,
        'canvas_hotkey_adjust': value.canvasHotkeyAdjust,
        'canvas_hotkey_shrink_brush': value.canvasHotkeyShrinkBrush,
        'canvas_hotkey_grow_brush': value.canvasHotkeyGrowBrush,
        'canvas_hotkey_move': value.canvasHotkeyMove,
        'canvas_hotkey_fullscreen': value.canvasHotkeyFullscreen,
        'canvas_hotkey_reset': value.canvasHotkeyReset,
        'canvas_hotkey_overlap': value.canvasHotkeyOverlap,
        'canvas_show_tooltip': value.canvasShowTooltip,
        'canvas_auto_expand': value.canvasAutoExpand,
        'canvas_blur_prompt': value.canvasBlurPrompt,
        'canvas_disabled_functions': value.canvasDisabledFunctions,
        'settings_in_ui': value.settingsInUi,
        'extra_options_txt2img': value.extraOptionsTxt2img,
        'extra_options_img2img': value.extraOptionsImg2img,
        'extra_options_cols': value.extraOptionsCols,
        'extra_options_accordion': value.extraOptionsAccordion,
    };
}


